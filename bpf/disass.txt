
wrapper.o:	file format ELF64-BPF


Disassembly of section .text:

0000000000000000 core:
       0:	b7 00 00 00 00 00 00 00	r0 = 0
       1:	95 00 00 00 00 00 00 00	exit

Disassembly of section tracepoint/printk/console:

0000000000000000 bpf_prog:
       0:	85 00 00 00 05 00 00 00	call 5
       1:	bf 06 00 00 00 00 00 00	r6 = r0
       2:	85 00 00 00 05 00 00 00	call 5
       3:	18 01 00 00 63 6f 72 65 00 00 00 00 2e 63 20 64	r1 = 7214875653969178467 ll
       5:	7b 1a d8 ff 00 00 00 00	*(u64 *)(r10 - 40) = r1
       6:	18 01 00 00 65 6c 74 61 00 00 00 00 20 3d 20 25	r1 = 2675205387941342309 ll
       8:	7b 1a e0 ff 00 00 00 00	*(u64 *)(r10 - 32) = r1
       9:	b7 01 00 00 6c 69 0a 00	r1 = 682348
      10:	63 1a e8 ff 00 00 00 00	*(u32 *)(r10 - 24) = r1
      11:	1f 60 00 00 00 00 00 00	r0 -= r6
      12:	7b 0a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r0
      13:	bf a1 00 00 00 00 00 00	r1 = r10
      14:	07 01 00 00 d8 ff ff ff	r1 += -40
      15:	b7 02 00 00 14 00 00 00	r2 = 20
      16:	bf 03 00 00 00 00 00 00	r3 = r0
      17:	85 00 00 00 06 00 00 00	call 6
      18:	b7 01 00 00 0a 00 00 00	r1 = 10
      19:	6b 1a d0 ff 00 00 00 00	*(u16 *)(r10 - 48) = r1
      20:	18 01 00 00 61 74 20 6c 00 00 00 00 65 61 73 74	r1 = 8391157618955023457 ll
      22:	7b 1a c8 ff 00 00 00 00	*(u64 *)(r10 - 56) = r1
      23:	18 01 00 00 77 6f 72 6b 00 00 00 00 69 6e 67 20	r1 = 2334956330868174711 ll
      25:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
      26:	bf a1 00 00 00 00 00 00	r1 = r10
      27:	07 01 00 00 c0 ff ff ff	r1 += -64
      28:	b7 02 00 00 12 00 00 00	r2 = 18
      29:	85 00 00 00 06 00 00 00	call 6
      30:	b7 06 00 00 00 00 00 00	r6 = 0
      31:	63 6a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r6
      32:	bf a2 00 00 00 00 00 00	r2 = r10
      33:	07 02 00 00 fc ff ff ff	r2 += -4
      34:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      36:	85 00 00 00 01 00 00 00	call 1
      37:	15 00 0f 00 00 00 00 00	if r0 == 0 goto +15 <LBB1_2>
      38:	61 01 00 00 00 00 00 00	r1 = *(u32 *)(r0 + 0)
      39:	07 01 00 00 01 00 00 00	r1 += 1
      40:	67 01 00 00 20 00 00 00	r1 <<= 32
      41:	77 01 00 00 20 00 00 00	r1 >>= 32
      42:	7b 1a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r1
      43:	bf a2 00 00 00 00 00 00	r2 = r10
      44:	07 02 00 00 c0 ff ff ff	r2 += -64
      45:	bf a3 00 00 00 00 00 00	r3 = r10
      46:	07 03 00 00 f0 ff ff ff	r3 += -16
      47:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      49:	b7 04 00 00 00 00 00 00	r4 = 0
      50:	85 00 00 00 02 00 00 00	call 2
      51:	b7 04 00 00 02 00 00 00	r4 = 2
      52:	05 00 02 00 00 00 00 00	goto +2 <LBB1_3>

00000000000001a8 LBB1_2:
      53:	7b 6a c0 ff 00 00 00 00	*(u64 *)(r10 - 64) = r6
      54:	b7 04 00 00 01 00 00 00	r4 = 1

00000000000001b8 LBB1_3:
      55:	bf a2 00 00 00 00 00 00	r2 = r10
      56:	07 02 00 00 fc ff ff ff	r2 += -4
      57:	bf a3 00 00 00 00 00 00	r3 = r10
      58:	07 03 00 00 c0 ff ff ff	r3 += -64
      59:	18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00	r1 = 0 ll
      61:	85 00 00 00 02 00 00 00	call 2
      62:	b7 00 00 00 00 00 00 00	r0 = 0
      63:	95 00 00 00 00 00 00 00	exit
